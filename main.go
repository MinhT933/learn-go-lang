package main

import (
	"fmt"
)

func main() {
    todoList()
	name:= "To√†n"
	age:= 23
	hobby:= "h·ªçc Go  m·ªói s√°ng"
    score := 8.75
	number:= 10 
	count:=5
	sum:= 0
	//Println log xu·ªëng d√≤ng, Print kh√¥ng xu·ªëng d√≤ng
	// Printf l√† format string c√≥ c√°c place holder %
	// %s string
	// %d int
	// %f float64
	// %v in ra b·∫•t k√¨ gi√° tr·ªã n√†o
	
    fmt.Printf("üëã Xin ch√†o %s\n", name)
    fmt.Printf("üéÇ Tu·ªïi c·ªßa b·∫°n l√†: %d\n", age)
    fmt.Printf("üìä ƒêi·ªÉm l·∫≠p tr√¨nh Go: %.2f\n", score)
	fmt.Printf("s·ªü th√≠ch: %s\n", hobby)



	/// l√†m quen v·ªõi if else
  

	if age >= 18 {
		fmt.Println("‚úÖ B·∫°n ƒë·ªß tu·ªïi r·ªìi")
	}else {
		fmt.Println("‚ùå ch∆∞a ƒë·ªß tu·ªïi u·ªëng r∆∞·ª£i bia")
	}

	if number%2 ==0 {
      println("S·ªë n√†y l√† s·ªë ch·∫µn")
	}else{
	  println("S·ªë n√†y l√† s·ªë l·∫Ω")
	}
	 // for- v√≤ng l·∫∑p
	 for i := 0; i < count; i++ {
		fmt.Println("l·∫∑p l·∫ßn th·ª©", i)
	 }

	 // t√≠nh t·ªïng v·ªõi for
	//  for i := 0; i < count; i++ {
	// 	sum+=i
	
	//  }
	//  	fmt.Println("t·ªïng trong", sum)

    // t√≠nh c·ªïng s·ªë l·∫Ω t·ª´ 0 ƒë·∫øn `100`
	for i := 0; i < count; i++ {
		if(i%2 == 0){
			sum +=i
		}
	}
	fmt.Println("t·ªïng s·ªë ch·∫µn", sum)

	// in ra tam gi√°c s·ªë
    // ƒë·∫øm gi·∫£m
	for i := 0;  i<= count; i++ {
		for j:= 0; j<= i; j++ {
			fmt.Printf("%d ", j)
		}
		fmt.Println()
	}

	//ƒë·∫øm tƒÉng
	// for i := count;  i >= 1; i-- {
	// 	for j:= 1; j <= i; j++ {
	// 		fmt.Printf("%d ", j)
	// 	}
	// fmt.Println()


	//Struct -- ki·ªÉu d·ªØ li·ªáu t·ª± ƒë·ªãnh nghƒ©a

	type User struct {
		Name string
		Age int
	}

	u := User{Name:"T∆∞·ªùng", Age: 23}

	fmt.Printf("ü´Ç ng∆∞·ªùi d√πng: %s (%d tu·ªïi)\n", u.Name, u.Age)


	// l√†m quen v·ªõi ki·ªÉu d·ªØ li·ªáu khai b·∫£o m·∫£ng trong go

	type Task struct {
       Title string
	   Done bool
	}

	tasks:= []Task{
		{Title: "H·ªçc go", Done: false},
	    {Title: "H·ªçc go", Done: true},
	}
    for _, task := range tasks {
	    fmt.Printf("üìå Vi·ªác: %s | Tr·∫°ng th√°i: ", task.Title)
		if task.Done {
			fmt.Println("üéâ ƒê√£ ho√†n th√†nh")
		}else {
			fmt.Println("üïß Ch∆∞a ho√†n th√†nh")
		}
	}

	// check(duyet m·∫£ng) d·ª±a theo key v√† value

	roles:= map[string]string {
		"admin": "Qu·∫£n tr·ªã vi√™n",
		"use": "Ng∆∞·ªùi d√πng",
	}
	fmt.Println("üëë vai tr√≤", roles["admin"])
}


